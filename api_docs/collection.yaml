openapi: 3.0.0
info:
  title: APIGAMES
  version: 1.0.0
servers:
  - url: https://be-js-challenge-06.herokuapp.com
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []
tags:
  - name: Auth
  - name: User Games
  - name: User Games Biodata
  - name: User Games History
paths:
  /login:
    post:
      tags:
        - Auth
      summary: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: pialuthfiyah
                password: pia
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /register:
    post:
      tags:
        - Auth
      summary: register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: pialuthfiyah
                password: pia
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/user-games:
    get:
      tags:
        - User Games
      summary: getAll
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - User Games
      summary: add by req Body
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: q
                password: pia
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/user-games/{id}:
    get:
      tags:
        - User Games
      summary: find By Id (Search)
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - User Games
      summary: update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                username: isMailbinMail
                password: pwMail
                email: iniemail@gmail.com
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - User Games
      summary: delete Copy
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/user-games/insert:
    post:
      tags:
        - User Games
      summary: add by req Params
      requestBody:
        content: {}
      parameters:
        - name: username
          in: query
          schema:
            type: string
          example: piaws
        - name: email
          in: query
          schema:
            type: string
          example: piaws@gmail.com
        - name: password
          in: query
          schema:
            type: string
          example: pia
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/user-games-biodata:
    get:
      tags:
        - User Games Biodata
      summary: getAll
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - User Games Biodata
      summary: add by req Body
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user_id: 3
                fullname: Luthfiyah Sakinah
                gender: Female
                date_of_birth: '2002-07-19'
                place_of_birth: Purwakarta
                address: Sindangkasih
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/user-games-biodata/{id}:
    get:
      tags:
        - User Games Biodata
      summary: find By Id (Search)
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - User Games Biodata
      summary: update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user_id: 3
                fullname: Luthfiyah
                gender: Female
                date_of_birth: '2002-07-19'
                place_of_birth: Purwakarta
                address: Sindangkasih
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - User Games Biodata
      summary: delete
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/user-games-history:
    get:
      tags:
        - User Games History
      summary: getAll
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - User Games History
      summary: add by req Body
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user_id: 10
                score: 100
                session_start: '2022-04-09 10:10:00'
                session_end: '2022-04-09 12:40:00'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/v1/user-games-history/{id}:
    get:
      tags:
        - User Games History
      summary: find By Id (Search)
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - User Games History
      summary: update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                user_id: 3
                score: 10
                session_start: '2022-04-07 10:10:00'
                session_end: '2022-04-07 12:02:30'
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - User Games History
      summary: delete
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
